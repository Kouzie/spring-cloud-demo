server.port=${PORT:8888}
spring.application.name=config-server
#
#spring.cloud.config.server.git.uri=https://github.com/Kouzie/cloud-config-repo.git
# public repo일 경우 아이디와 패스워드는 필요 X
#spring.cloud.config.server.git.username=${github.username}
#spring.cloud.config.server.git.password=${github.password}
# ssl 검증 생략
#spring.cloud.config.server.git.skip-ssl-validation=true
# config server 시작시 repo를 local에 clone해와서 설정파일 적용
#spring.cloud.config.server.git.clone-on-start=true
#
# https://cloud.spring.io/spring-cloud-static/spring-cloud-config/1.1.3.RELEASE/
# 기본 로컬환경의 백앤드 프로파일을 사용하려면 "spring.profiles.active=native"로 config 서버를 시작하십시오
spring.profiles.active=native
# 시스템 파일 기반 config 파일 지정
spring.cloud.config.server.native.search-locations=classpath:app-config
#
# config server역시 유레카 서버처럼 보안설정이 가능하다.
spring.security.user.name=admin-config
spring.security.user.password=1234
#
# spring cloud config를 유레카 서비스 서버에 등록, 다른 유레카 클라이언트가 cloud config를 유레카 서버를 통해 얻을 수 있다.
eureka.client.service-url.defaultZone=http://admin-eureka:1234@127.0.0.1:8761/eureka/
#
eureka.client.register-with-eureka=true
eureka.client.fetchRegistry=true

# spring admin starter 를 사용한 서비스 모니터링
spring.boot.admin.client.url=http://localhost:10000
# actuator 경로 모두 노출 및 hear beat 용 api 추
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always