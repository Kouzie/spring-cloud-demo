spring.application.name=eureka-server
server.port=8761
# 이 클라이언트가 유레카 서버에서 유레카 레지스트리 정보를 가져와야 하는지 여부. default true
eureka.client.fetch-registry=false
# spring security 설정
spring.security.user.name=admin-eureka
spring.security.user.password=1234
#eureka.instance.hostname=127.0.0.1
eureka.client.service-url.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}\


#  @${eureka.instance.hostname}:${server.port}/eureka/
## 유레카 서버에 자기자신을 등록할 건지 여부
#eureka.client.register-with-eureka=true

#
# eureka 설정
#eureka.instance.metadata-map.zone=${ZONE:zone1}
## 서버 자체 네트워크 불안정시 모든 클라이언트 연결 해제됨으로 일정시간동안 연결이 끊기더라도 유지시키는 옵션
## false 일 경우 eviction-interval-timer 동안기다리도록 설정
#eureka.server.enable-self-preservation=true
## 클라이언트 heartbeat 수신 인터벌, 기본값 60초
#eureka.server.eviction-interval-timer-in-ms=3000
## heartbeat 미달시 클라이언트의 서비스 지원을 중지하고 3초가 지나면 서비스를 퇴거(삭제)한다
## 등록 이후 Instance 정보가 변경 되었을 때 Registry 정보를 갱신하기 위한 REST를 2초마다 호출
#eureka.client.instance-info-replication-interval-seconds=2

