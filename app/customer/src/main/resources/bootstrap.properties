eureka.instance.metadata-map.zone=${ZONE:zone1}
spring.profiles.include=local
#
spring.application.name=customer-service
eureka.client.service-url.defaultZone=http://admin-eureka:1234@127.0.0.1:8761/eureka/
#
# config서버를 유레카 서버로 부터 discovery하여 사용,
# cloudconfig 서비스가 config서버임을 지정
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.service-id=config-server
#
# cloud config에 안전한 접근을 위해 cloud config에서 spring security를 통해 계정/비번 설정을 하였다.
# cloud config의 security에서 지정한 계정 비번을 그대로 적용
spring.cloud.config.username=admin-config
spring.cloud.config.password=1234
#
# default로 heartbeat를 30초마다 보내고 서버는 보호 모드로 인해 heartbeat를 90초동안 받지 못한다면 instance를 제거한다. 보호모드 제거시 60초에 instance제거
# 이는 client 장애가 발생해도 최악의 경우 60초동안 client 연결을 유지 시켜준다는 뜻, 사용자 입장에선 최악
# 이를 방지하기 위해 1초마다 heartbeat를 전송하고
eureka.instance.lease-renewal-interval-in-seconds=1
# heartbeat 못받고 2초가 지나가면 인스턴스가 제거된다. 더이상 클라이언트로 서비스를 서버가 보내지 않는다
eureka.instance.lease-expiration-duration-in-seconds=2
#
# 유레카 서버에 본인 서비스를 등록할 건지 여부
eureka.client.register-with-eureka=true
# 유레카 서버로부터 서비스 목록을 로컬 캐시에 저장할 건지 여부, 둘 다 기본값 true라서 지정하지 않아도 상관 없다.
eureka.client.fetchRegistry=true
# 같은 존에 있는 서비스 호출을 선호 하도록 설정
eureka.client.prefer-same-zone-eureka=true

